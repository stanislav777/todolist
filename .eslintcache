[{"F:\\WEB\\2021\\todolist\\src\\App.tsx":"1","F:\\WEB\\2021\\todolist\\src\\serviceWorker.ts":"2","F:\\WEB\\2021\\todolist\\src\\index.tsx":"3","F:\\WEB\\2021\\todolist\\src\\Todolist.tsx":"4","F:\\WEB\\2021\\todolist\\src\\AddItemForm.tsx":"5","F:\\WEB\\2021\\todolist\\src\\EditableSpan.tsx":"6"},{"size":6413,"mtime":1615067244491,"results":"7","hashOfConfig":"8"},{"size":5295,"mtime":1587586614000,"results":"9","hashOfConfig":"8"},{"size":465,"mtime":1610009859902,"results":"10","hashOfConfig":"8"},{"size":4418,"mtime":1615022172669,"results":"11","hashOfConfig":"8"},{"size":1420,"mtime":1613668627852,"results":"12","hashOfConfig":"8"},{"size":1018,"mtime":1613658915713,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w44c5s",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\WEB\\2021\\todolist\\src\\App.tsx",[],"F:\\WEB\\2021\\todolist\\src\\serviceWorker.ts",[],["29","30"],"F:\\WEB\\2021\\todolist\\src\\index.tsx",[],["31","32"],"F:\\WEB\\2021\\todolist\\src\\Todolist.tsx",[],"F:\\WEB\\2021\\todolist\\src\\AddItemForm.tsx",["33"],"import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport {Button, IconButton, TextField} from \"@material-ui/core\";\r\nimport {AddBox} from \"@material-ui/icons\";\r\n\r\ntype AddItemFormPropsType = {\r\n addItem: (titile: string) => void\r\n}\r\n\r\n\r\nfunction AddItemForm( props:AddItemFormPropsType ) {\r\n\r\n    let [error, setError] = useState<boolean>(false)\r\n    let [title, setTitle] = useState(\"\")\r\n\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n              if (e.key === \"Enter\") {addItem()}\r\n    }\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title.trim(),)\r\n            setTitle(\"\")\r\n        } else {\r\n            setError(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n            variant={\"outlined\"}\r\n            value={title}\r\n            onChange={changeTitle}\r\n            onKeyPress={onKeyPressHandler}\r\n            error={!!error}\r\n            helperText= {error /*&& <div className=\"error-message\">Title is required!</div>*/}\r\n            label={\"Title\"}\r\n            onBlur={() => {setError(false)}}\r\n            />\r\n            <IconButton onClick={addItem}>\r\n                <AddBox/>\r\n            </IconButton>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddItemForm;","F:\\WEB\\2021\\todolist\\src\\EditableSpan.tsx",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"38"},{"ruleId":"36","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":9,"nodeType":"42","messageId":"43","endLine":2,"endColumn":15},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],["44"],["45"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]